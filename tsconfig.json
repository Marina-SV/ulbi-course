{
  "compilerOptions": {
    "outDir": "./dist/",
    // куда происходит сборка, но мы собираем webpack
    "noImplicitAny": true,
    // подсвечивает места где не указан тип
    "module": "ES6",
    // вариант модульной сборки
    "target": "es5",
    // в какой стандарт компилировать наш код
    "jsx": "react-jsx",
    // использовать use-strict в ts обязательно
    "strict": true,
    // чтобы писать конструкции jsx в реакт
    "allowJs": true,
    // позволяет компилятору обрабатывать не только ts, но и js
    "moduleResolution": "node",
    // определяет тип импортов node или classic
    // esModuleInterop позволяет работать с пакетами common.js c помощью import,
    // т.е. не использовать require()
    "baseUrl": ".",
    "paths": {
      "*": [
        "./src/*"
      ]
    },
    // настройка абсолютных путей для импортов
    "esModuleInterop": true,
    // Библиотеки написанные на node.js часто не имеют
    // дефолтного импорта (import webpack from 'webpack')
    // лоадеры типа ts-loader могут автоматически создавать их
    // пишем import webpack from 'webpack'
    // вместо import * as webpack from 'webpack'
    "allowSyntheticDefaultImports": true
  },
    // если НЕ module: commonJS, то нужны настройки ts-node
    "ts-node": {
      "compilerOptions": {
        "module": "CommonJS"
      }
    },
    // настройка для jest
    "include": [
      "./config/jest/setupTests.ts",
      "./src/**/*.ts",
      "./src/**/*.tsx"
    ]
}
